name: Build Flutter APK (Release)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Prepare project (pub get + create android + icons)
        run: |
          rm -f pubspec.lock
          flutter pub get
          flutter create .
          # لو بتستعمل flutter_launcher_icons في pubspec.yaml
          flutter pub run flutter_launcher_icons || true

      # ضبط ndkVersion تلقائيًا (لو الملف KTS أو Groovy)
      - name: Patch NDK version
        run: |
          if [ -f android/app/build.gradle.kts ]; then
            if ! grep -q 'ndkVersion' android/app/build.gradle.kts; then
              sed -i 's/android {$/android {\n    ndkVersion = "27.0.12077973"/' android/app/build.gradle.kts
            else
              sed -i 's/ndkVersion.*/ndkVersion = "27.0.12077973"/' android/app/build.gradle.kts
            fi
          elif [ -f android/app/build.gradle ]; then
            if ! grep -q 'ndkVersion' android/app/build.gradle; then
              sed -i 's/android {$/android {\n    ndkVersion "27.0.12077973"/' android/app/build.gradle
            else
              sed -i 's/ndkVersion.*/ndkVersion "27.0.12077973"/' android/app/build.gradle
            fi
          fi

      - name: Build release APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
